{{template "front_header.tmpl" .}}



<div class="layui-container">
    <div class="header">
        <h2 style="padding: 20px;text-align: center;">NDMÂ≠òÂÇ®ÁÆ°ÁêÜ</h2>
    </div>
</div>

<div class="layui-container" style="width:70%;min-width: 500px;">
    <div id="nav">
        <span class="layui-breadcrumb-ndm" lay-filter="ndm-nav">
            <a href="/">üè†‰∏ªÈ°µ</a>
            <span class="other"></span>
        </span>
    </div>
    
    <div class="bgw divtable" style="padding:1rem;">
        <div class="layui-form">
            <div id="multiple_choice" class="layui-form-item" style="display: none;">
                <select name="look_method" lay-filter="look_method">
                    <option value="downlaod">Downlaod</option>
                </select>
            </div>
        </div>
        <div id="list"></div>
    </div>
</div>


<script>
layui.use(['layer','form','element','jquery','table','laydate','util'],function(){
///
var $ = layui.$;
var layer = layui.layer;
var form = layui.form;
var table = layui.table;
var laydate = layui.laydate;
var util = layui.util;

function makeBreadcrumb(){
    var path = location.pathname;
    if (path == '' || path == '/') {
        return;
    }

    var parr = path.split("/");
    parr.shift();

    var con = '';
    var parr_len = parr.length;
    for (var i = 0; i < parr.length; i++) {
        var nparr = parr.slice(0,i+1);
        var url = '/'+nparr.join('/');
        con += '<span lay-separator="">/</span><span path="'+url+'">'+parr[i]+'</span>';
    }
    $('.layui-breadcrumb-ndm .other').html(con);

    $('.layui-breadcrumb-ndm .other span').click(function(){
        var path = $(this).attr("path");
        window.history.pushState({}, '', path);
        renderInfo(path);
    });
}

function renderSelect(file_type, src_data){
    // console.log("file_type:",file_type);
    var option = "<option value='downlaod'>Downlaod</option>";
    if (isCodeFile(file_type)){
        option = "<option value='text_editor' selected>Text Editor</option>" + option;
    } else if (isVideoFile(file_type)) {
        option = "<option value='video' selected>Video</option>" + option;
    } else if (isM3u8File(file_type)) {
        option = "<option value='m3u8' selected>M3U8</option>" + option;
    } else if (isImageFile(file_type)) {
        option = "<option value='image' selected>Image</option>" + option;
    } else {
        closeSelect();
        // return;
    }

    $('#multiple_choice select').html(option);
    $('#multiple_choice').css('display', "block");
    form.render();

    form.on('select(look_method)', function(data){
        if (data.value == 'downlaod'){
            renderDownload(src_data);
        } else if (data.value == 'image'){
            renderImage(src_data);
        } else if (data.value == 'm3u8'){
            renderM3u8(src_data);
        } else if (data.value == 'video'){
            renderVideo(src_data);
        } else if (data.value == 'text_editor'){
            renderEditFile(src_data);
        }
    });
}

function closeSelect(){
    $('#multiple_choice').css('display', "none");
}


function renderInfo(req_path){
    var args = {
        password : "",
        path : req_path,
    }
    makeBreadcrumb();
    $.post('{{.api_path}}/fs/get', args, function(data){
        if (data.code == 200) {
            if (data.data.is_dir){
                renderList(req_path);
                closeSelect();
            } else {
                // console.log(data);
                var ext_name = getFileExtension(data.data.name);
                renderSelect(ext_name, data.data);
                if (isCodeFile(ext_name)){
                    renderEditFile(data.data);
                } else if (isVideoFile(ext_name)){
                    renderVideo(data.data);
                } else if (isM3u8File(ext_name)){
                    renderM3u8(data.data);
                } else if (isImageFile(ext_name)){
                    renderImage(data.data);
                } else {
                    closeSelect();
                    renderDownload(data.data);
                }
            }
        } else if(data.code == 401){
            layer.msg(data.msg);
        }
    });
}

function renderImage(data){
    var body = '<div style="min-height:300px;margin:0 auto;padding:0px;"><div id="ndm_image" style="min-height:300px;align-items:center;justify-content:center;display: flex;"></div>\
    </div>';

    $('#list').html(body);

    var image = '<img style="max-width:100%;" src="'+data.raw_url+'"/>';
    $('#ndm_image').html(image);
}

function renderVideo(data){
    var body = '<div style="min-height:300px;margin:0 auto;padding:0px;"><div id="ndm_video" style="height:300px;width:100%;"></div>\
    </div>';
    $('#list').html(body);
    var art = new Artplayer({
        container: '#ndm_video',
        url: data.raw_url,
        autoSize: true,
        fullscreen: true,
        fullscreenWeb: true,
        autoOrientation: true,
  });
}

function renderM3u8(data){
    var body = '<div style="min-height:300px;margin:0 auto;padding:0px;"><div id="ndm_video" style="height:300px;width:100%;"></div>\
    </div>';

    $('#list').html(body);
    const dp = new DPlayer({
    container: document.getElementById('ndm_video'),
        preload:'metadata',
        theme: '#FADFA3',
        hotkey: true,
        mutex: true,
        autoplay:true,
        lang:'zh-cn',
        screenshot:true,
        chromecast:true,
        airplay:true,
        video: {
            type: 'auto',
            url: data.raw_url,
            type: 'customHls',
            customType: {
            customHls: function (video, player) {
                    const hls = new Hls();
                    hls.loadSource(video.src);
                    hls.attachMedia(video);
                },
            },
        }
    });
}


function renderEditFile(data){

    var body = '<div style="min-height:300px;margin:0 auto;padding:0px;"><textarea id="editor" style="width:100%;margin:0 auto;line-height: 1.8;position: relative;top: 10px;" ></textarea>\
    </div>';

    $('#list').html(body);
    // $("#editor").text("ÊµãËØï");
    // editor.focus();
    var fext = getFileExtension(data.name);
    var mode = getFileTypeFormat(fext);
    // console.log(mode);
    $.get(data.raw_url, function(content ,status) {
        var editor = CodeMirror.fromTextArea(document.getElementById("editor"), {
            extraKeys: {
                "Ctrl-F": "findPersistent",
                "Ctrl-H": "replaceAll",
                "Ctrl-S": function() {
                },
                "Cmd-S":function() {
                },
            },
            mode: mode,
            lineNumbers: true,
            matchBrackets: true,
            matchtags: true,
            theme: "default",
            autoRefresh: true,
            autoMatchParens: true
        });
        editor.setValue(content);
    },'text');
}

function renderDownload(data){

    var body = '<div style="text-align:center;height:300px;margin:0 auto;padding:24px 0 24px 0;font-size:14px;">\
        <div class="logo"><i class="layui-icon layui-icon-file" style="font-size: 100px;"></i></div>\
        <div class="name" style="color:#20134b;font-size:20px;overflow-wrap:break-word;">'+data.name+'</div>\
        <div class="info" style="color:#7e868c;font-size:12px;padding-top:10px;">'+toSize(data.size)+"¬∑"+isoTimeFormat(data['modified'])+'</div>\
        <div class="func" style="color:#7e868c;font-size:12px;padding-top:20px;">\
            <div class="layui-btn layui-btn-primary layui-border-green copy">Â§çÂà∂ÈìæÊé•</div>\
            <div class="layui-btn layui-btn-primary layui-border-red download">‰∏ãËΩΩ</div>\
            <div class="layui-btn layui-btn-primary layui-border-black qrcode">‰∫åÁª¥Á†Å</div>\
        </div>\
    </div>';

    $('#list').html(body);


    $("#list .copy").click(function(){
        Admin.Copy(data.raw_url);
    });

    $("#list .download").click(function(){
        window.open(data.raw_url);
    });

    $("#list .qrcode").click(function(e){
        e.stopPropagation();
        if ($('#qrcode').length>0){
            layer.closeAll('tips');
            return;
        }

        layer.tips('<canvas id="qrcode" height="150" width="150" style="height: 150px; width: 150px;"></canvas>',
            this,{
                tips: [1, '#fff'],
                // time: 100000,
                area: 'auto',
                success: function(layero){
                    layero.find('.layui-tips').css('padding', '10px');
                    $('#qrcode').qrcode({width: 130,height: 130,text: "size doesn't matter"});
                }
            }
        );
        
        $(document).on('click', function(e) {
            if (!$(e.target).closest('.layui-tips').length) {
                layer.closeAll('tips');
            }
        });
    });
}

function renderList(req_path){
    var args = {
        page: 1,
        password : "",
        path : req_path,
        per_page: 0,
        refresh: false,
    }

    var content = '<div class="divtable">\
            <table class="table table-hover" width="100%" cellspacing="0" cellpadding="0" border="0" style="border: 0 none;">\
            <thead>\
                <tr>\
                    <td style="width:50%;">ÂêçÁß∞</td>\
                    <td style="width:20%;text-align:right;">Â§ßÂ∞è</td>\
                    <td style="width:30%;text-align:right;">‰øÆÊîπÊó∂Èó¥</td>\
                </tr>\
            </thead>\
            <tbody></tbody>\
            </table>\
        </div>';
    $('#list').html(content);

    var loadT = layer.msg('Ê≠£Âú®Ëé∑Âèñ...', { icon: 16, time: 0, shade: 0.3 });
    $.post('{{.api_path}}/fs/list', args, function(data){
        layer.close(loadT);
        var body = '';
        if (data.code==200){
            var list = data['data']['content'];

            for (var i = 0; i < list.length; i++) {

                if (location.pathname == "/"){
                    body += '<tr style="border: 0 none;" file="/'+list[i]['name']+'" >';
                } else {
                    body += '<tr style="border: 0 none;" file="'+location.pathname+"/"+list[i]['name']+'" >';
                }
                
                if (list[i]['is_dir']){
                    body += '<td>'+'<span class="ico ico-folder"></span>'+'<a class="text">'+list[i]['name']+'</a></td>';
                } else {
                    body += '<td>'+'<span class="ico ico-file"></span>'+'<a class="text">'+list[i]['name']+'</a></td>';
                }

                if (list[i]['is_dir']){
                    body += '<td style="text-align:right;"><a class="text">-</a></td>';
                } else {
                    body += '<td style="text-align:right;"><a class="text">'+toSize(list[i]['size'])+'</a></td>';
                }
                
                body += '<td style="text-align:right;"><a class="text">'+isoTimeFormat(list[i]['modified'])+'</a></td>';
                body += '</tr>';
            }

        } else {
            body += '<tr><td colspan="3" style="text-align: center;">'+data['msg']+'</td></tr>';
        }

        $('#list tbody').html(body);
        $('#list tr').click(function(){
            var fname = $(this).attr("file");
            if (fname){
                window.history.pushState({}, '', fname);
                renderInfo(fname);
            }
        });
    });
}

renderInfo(location.pathname);
$(window).on('popstate', function() {
    renderInfo(location.pathname);
});


///
});
</script>

{{template "front_footer.tmpl" .}}